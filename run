#! /bin/bash

# Maker/tester/runner for the experimental version of Fizz.
# Usage: ./run.sh r|t e|p|n 1|2 ["name"]
# Mods:
# r - run; run Viewer from /data/ with options from e|p|n
# t - test; make Viewer, used to see if there are any compile time errors
# e - eventlog; compiles and runs the file with eventlog enabled
# p - profile; compiles and runs the file with profiling enabled
# n - neither profiling nor eventlog is enabled
# 1|2 - number of cores in execution, from ghc's -N*
# "name" - name parameter for the log, log is recored with this enabled

cd ~/Dropbox/Work/Fizz
GIT_SHA=$(git rev-parse HEAD)
DATE=$(date +%Y-%m-%d_%H:%M)
FILENAME=$DATE
WRITE=false

if [ "$1" = "r" ]
then
    MAKESTRING="ghc Viewer.hs -O2 -rtsopts -threaded"
    RUNSTRING="../Viewer +RTS -s"
elif [ "$1" = "t" ]
then
    MAKESTRING="ghc Viewer.hs"
    eval $MAKESTRING
    exit
else
    echo "ERROR: Looks like argument 1 is wrong (or missing)"
    exit
fi

if [ "$2" = "e" ]
then
    MAKESTRING=$MAKESTRING" -eventlog"
    RUNSTRING=$RUNSTRING" -ls"
    FILENAME=$FILENAME"_e"
elif [ "$2" = "p" ]
then
    MAKESTRING=$MAKESTRING" -prof -fprof-auto"
    RUNSTRING=$RUNSTRING" -p"
    FILENAME=$FILENAME"_p"
elif [ "$2" = "n" ]
then
    FILENAME=$FILENAME"_n"
else
    echo "ERROR: Looks like argument 2 is wrong (or missing)"
    exit
fi

if [ $3 -lt 4 ] && [ $3 -ge 1 ]
then
    RUNSTRING=$RUNSTRING" -N"$3
    FILENAME=$FILENAME"_"$3
else
    echo "ERROR: Looks like argument 3 is missing or greater than 4"
    exit
fi

if [ "$4" = w ]
then
    FILENAME=$FILENAME"_"$4
    WRITE=true
fi

FILENAME=$FILENAME"_"$GIT_SHA

RUNSTRING=$RUNSTRING" -RTS"
eval $MAKESTRING
cd data/
if [ $WRITE = "true" ]
then
    eval $RUNSTRING 2> ../logs/$FILENAME.txt
else
    eval $RUNSTRING
fi

cd ..
